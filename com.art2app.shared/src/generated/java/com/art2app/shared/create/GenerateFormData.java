package com.art2app.shared.create;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "com.art2app.client.create.GenerateForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class GenerateFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	/**
	 * access method for property Appname.
	 */
	public String getAppname() {
		return getAppnameProperty().getValue();
	}

	/**
	 * access method for property Appname.
	 */
	public void setAppname(String appname) {
		getAppnameProperty().setValue(appname);
	}

	public AppnameProperty getAppnameProperty() {
		return getPropertyByClass(AppnameProperty.class);
	}

	public Html getHtml() {
		return getFieldByClass(Html.class);
	}

	/**
	 * access method for property Splashfilename.
	 */
	public String getSplashfilename() {
		return getSplashfilenameProperty().getValue();
	}

	/**
	 * access method for property Splashfilename.
	 */
	public void setSplashfilename(String splashfilename) {
		getSplashfilenameProperty().setValue(splashfilename);
	}

	public SplashfilenameProperty getSplashfilenameProperty() {
		return getPropertyByClass(SplashfilenameProperty.class);
	}

	/**
	 * access method for property Url.
	 */
	public String getUrl() {
		return getUrlProperty().getValue();
	}

	/**
	 * access method for property Url.
	 */
	public void setUrl(String url) {
		getUrlProperty().setValue(url);
	}

	public UrlProperty getUrlProperty() {
		return getPropertyByClass(UrlProperty.class);
	}

	/**
	 * access method for property User.
	 */
	public String getUser() {
		return getUserProperty().getValue();
	}

	/**
	 * access method for property User.
	 */
	public void setUser(String user) {
		getUserProperty().setValue(user);
	}

	public UserProperty getUserProperty() {
		return getPropertyByClass(UserProperty.class);
	}

	public static class AppnameProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class Html extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class SplashfilenameProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class UrlProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class UserProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}
}
